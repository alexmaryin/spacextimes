// Generated by Dagger (https://dagger.dev).
package ru.alexmaryin.spacextimes_rx.ui.view.viewmodel;

import dagger.internal.Factory;
import javax.inject.Provider;
import ru.alexmaryin.spacextimes_rx.data.api.translator.TranslatorApi;
import ru.alexmaryin.spacextimes_rx.data.repository.SpacexDataRepository;
import ru.alexmaryin.spacextimes_rx.di.Settings;
import ru.alexmaryin.spacextimes_rx.utils.NetworkHelper;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SpaceXViewModel_Factory implements Factory<SpaceXViewModel> {
  private final Provider<SpacexDataRepository> repositoryProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  private final Provider<Settings> settingsProvider;

  private final Provider<TranslatorApi> translatorProvider;

  public SpaceXViewModel_Factory(Provider<SpacexDataRepository> repositoryProvider,
      Provider<NetworkHelper> networkHelperProvider, Provider<Settings> settingsProvider,
      Provider<TranslatorApi> translatorProvider) {
    this.repositoryProvider = repositoryProvider;
    this.networkHelperProvider = networkHelperProvider;
    this.settingsProvider = settingsProvider;
    this.translatorProvider = translatorProvider;
  }

  @Override
  public SpaceXViewModel get() {
    return newInstance(repositoryProvider.get(), networkHelperProvider.get(), settingsProvider.get(), translatorProvider.get());
  }

  public static SpaceXViewModel_Factory create(Provider<SpacexDataRepository> repositoryProvider,
      Provider<NetworkHelper> networkHelperProvider, Provider<Settings> settingsProvider,
      Provider<TranslatorApi> translatorProvider) {
    return new SpaceXViewModel_Factory(repositoryProvider, networkHelperProvider, settingsProvider, translatorProvider);
  }

  public static SpaceXViewModel newInstance(SpacexDataRepository repository,
      NetworkHelper networkHelper, Settings settings, TranslatorApi translator) {
    return new SpaceXViewModel(repository, networkHelper, settings, translator);
  }
}
