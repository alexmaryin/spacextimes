// Generated by Dagger (https://dagger.dev).
package ru.alexmaryin.spacextimes_rx.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.alexmaryin.spacextimes_rx.data.api.wiki.WikiLoaderApi;
import ru.alexmaryin.spacextimes_rx.data.api.wiki.WikiLoaderImpl;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideWikiApiFactory implements Factory<WikiLoaderApi> {
  private final ApplicationModule module;

  private final Provider<WikiLoaderImpl> wikiApiProvider;

  public ApplicationModule_ProvideWikiApiFactory(ApplicationModule module,
      Provider<WikiLoaderImpl> wikiApiProvider) {
    this.module = module;
    this.wikiApiProvider = wikiApiProvider;
  }

  @Override
  public WikiLoaderApi get() {
    return provideWikiApi(module, wikiApiProvider.get());
  }

  public static ApplicationModule_ProvideWikiApiFactory create(ApplicationModule module,
      Provider<WikiLoaderImpl> wikiApiProvider) {
    return new ApplicationModule_ProvideWikiApiFactory(module, wikiApiProvider);
  }

  public static WikiLoaderApi provideWikiApi(ApplicationModule instance, WikiLoaderImpl wikiApi) {
    return Preconditions.checkNotNullFromProvides(instance.provideWikiApi(wikiApi));
  }
}
