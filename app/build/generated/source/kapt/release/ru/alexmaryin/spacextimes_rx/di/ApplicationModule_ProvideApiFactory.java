// Generated by Dagger (https://dagger.dev).
package ru.alexmaryin.spacextimes_rx.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import ru.alexmaryin.spacextimes_rx.data.api.SpaceXApi;
import ru.alexmaryin.spacextimes_rx.data.api.SpaceXApiImpl;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideApiFactory implements Factory<SpaceXApi> {
  private final ApplicationModule module;

  private final Provider<SpaceXApiImpl> apiProvider;

  public ApplicationModule_ProvideApiFactory(ApplicationModule module,
      Provider<SpaceXApiImpl> apiProvider) {
    this.module = module;
    this.apiProvider = apiProvider;
  }

  @Override
  public SpaceXApi get() {
    return provideApi(module, apiProvider.get());
  }

  public static ApplicationModule_ProvideApiFactory create(ApplicationModule module,
      Provider<SpaceXApiImpl> apiProvider) {
    return new ApplicationModule_ProvideApiFactory(module, apiProvider);
  }

  public static SpaceXApi provideApi(ApplicationModule instance, SpaceXApiImpl api) {
    return Preconditions.checkNotNullFromProvides(instance.provideApi(api));
  }
}
