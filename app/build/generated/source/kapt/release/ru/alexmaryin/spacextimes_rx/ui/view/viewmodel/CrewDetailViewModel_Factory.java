// Generated by Dagger (https://dagger.dev).
package ru.alexmaryin.spacextimes_rx.ui.view.viewmodel;

import androidx.lifecycle.SavedStateHandle;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.alexmaryin.spacextimes_rx.data.api.wiki.WikiLoaderApi;
import ru.alexmaryin.spacextimes_rx.data.repository.SpacexDataRepository;
import ru.alexmaryin.spacextimes_rx.utils.NetworkHelper;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CrewDetailViewModel_Factory implements Factory<CrewDetailViewModel> {
  private final Provider<SavedStateHandle> stateProvider;

  private final Provider<SpacexDataRepository> repositoryProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  private final Provider<WikiLoaderApi> wikiApiProvider;

  public CrewDetailViewModel_Factory(Provider<SavedStateHandle> stateProvider,
      Provider<SpacexDataRepository> repositoryProvider,
      Provider<NetworkHelper> networkHelperProvider, Provider<WikiLoaderApi> wikiApiProvider) {
    this.stateProvider = stateProvider;
    this.repositoryProvider = repositoryProvider;
    this.networkHelperProvider = networkHelperProvider;
    this.wikiApiProvider = wikiApiProvider;
  }

  @Override
  public CrewDetailViewModel get() {
    return newInstance(stateProvider.get(), repositoryProvider.get(), networkHelperProvider.get(), wikiApiProvider.get());
  }

  public static CrewDetailViewModel_Factory create(Provider<SavedStateHandle> stateProvider,
      Provider<SpacexDataRepository> repositoryProvider,
      Provider<NetworkHelper> networkHelperProvider, Provider<WikiLoaderApi> wikiApiProvider) {
    return new CrewDetailViewModel_Factory(stateProvider, repositoryProvider, networkHelperProvider, wikiApiProvider);
  }

  public static CrewDetailViewModel newInstance(SavedStateHandle state,
      SpacexDataRepository repository, NetworkHelper networkHelper, WikiLoaderApi wikiApi) {
    return new CrewDetailViewModel(state, repository, networkHelper, wikiApi);
  }
}
